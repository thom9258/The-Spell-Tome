* Yet Another LISP

YAL is a programming languange in the LISP style aiming to provide a robust, fully-fledged programming interpreter.
The aim of the project is to create a minimal implementation in the host languange C++, and having the rest of the languange be hosted in itself using the host implementation.
This means, that core functionality is implemented in the languange itself, such as core list functionality:

#+begin_src lisp
(fn! len (l)
  "count the length of a given list"
  (if (nil? list)
    0
    (+ 1 (len (tail list)))))

(fn! contains (value list)
  "check if a list contains a given value"
  (if (nil? list)
    NIL
    (if (eq (car list) value)
      T
      (contains value (cdr list)))))

#+end_src
